<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Basket' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fruits and Vegtables&quot;'>
        <calculation class='tableau' formula='&quot;Fruits and Vegtables&quot;' />
        <members>
          <member value='&quot;Fruits and Vegtables&quot;' />
          <member value='&quot;Meat and Animal Products&quot;' />
          <member value='&quot;Other&quot;' />
          <member value='&quot;Roots, Tubers &amp; Oil-Bearing Crops&quot;' />
          <member value='&quot;Cereals and Pulses&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Data (1)' inline='true' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data (1)' name='textscan.1fzadnp0muha2w12kva5u0dabh07'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/huin1/Downloads/Data (1).csv' dataRefreshTime='' directory='C:/Users/huin1/Downloads' filename='C:/Users/huin1/AppData/Local/Temp/TableauTemp/17zb1pz1qye9m314stujo0ac5khw/Data (1).csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Data (2)' name='excel-direct.00cwhpl1612g0o1am1u5w0mwujan'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/huin1/Downloads/Data (2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fzadnp0muha2w12kva5u0dabh07' name='Data (1).csv' table='[Data (1)#csv$]' type='table'>
          <columns gridOrigin='A1:V9917:no:A1:V9917:1'>
            <column datatype='integer' name='geographicaream49' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='region' ordinal='2' />
            <column datatype='real' name='measureditemcpc' ordinal='3' />
            <column datatype='string' name='crop' ordinal='4' />
            <column datatype='integer' name='timepointyears' ordinal='5' />
            <column datatype='real' name='loss_per_clean' ordinal='6' />
            <column datatype='real' name='percentage_loss_of_quantity' ordinal='7' />
            <column datatype='string' name='loss_quantity' ordinal='8' />
            <column datatype='string' name='loss_qualitiative' ordinal='9' />
            <column datatype='string' name='loss_monetary' ordinal='10' />
            <column datatype='string' name='activity' ordinal='11' />
            <column datatype='string' name='fsc_location1' ordinal='12' />
            <column datatype='string' name='periodofstorage' ordinal='13' />
            <column datatype='real' name='treatment' ordinal='14' />
            <column datatype='string' name='causeofloss' ordinal='15' />
            <column datatype='string' name='samplesize' ordinal='16' />
            <column datatype='real' name='units' ordinal='17' />
            <column datatype='string' name='method_datacollection' ordinal='18' />
            <column datatype='string' name='tag_datacollection' ordinal='19' />
            <column datatype='string' name='reference' ordinal='20' />
            <column datatype='string' name='url' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1fzadnp0muha2w12kva5u0dabh07' name='Data (1).csv' table='[Data (1)#csv$]' type='table'>
          <columns gridOrigin='A1:V9917:no:A1:V9917:1'>
            <column datatype='integer' name='geographicaream49' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='region' ordinal='2' />
            <column datatype='real' name='measureditemcpc' ordinal='3' />
            <column datatype='string' name='crop' ordinal='4' />
            <column datatype='integer' name='timepointyears' ordinal='5' />
            <column datatype='real' name='loss_per_clean' ordinal='6' />
            <column datatype='real' name='percentage_loss_of_quantity' ordinal='7' />
            <column datatype='string' name='loss_quantity' ordinal='8' />
            <column datatype='string' name='loss_qualitiative' ordinal='9' />
            <column datatype='string' name='loss_monetary' ordinal='10' />
            <column datatype='string' name='activity' ordinal='11' />
            <column datatype='string' name='fsc_location1' ordinal='12' />
            <column datatype='string' name='periodofstorage' ordinal='13' />
            <column datatype='real' name='treatment' ordinal='14' />
            <column datatype='string' name='causeofloss' ordinal='15' />
            <column datatype='string' name='samplesize' ordinal='16' />
            <column datatype='real' name='units' ordinal='17' />
            <column datatype='string' name='method_datacollection' ordinal='18' />
            <column datatype='string' name='tag_datacollection' ordinal='19' />
            <column datatype='string' name='reference' ordinal='20' />
            <column datatype='string' name='url' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geographicaream49</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geographicaream49]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>geographicaream49</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measureditemcpc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[measureditemcpc]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>measureditemcpc</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crop</remote-name>
            <remote-type>130</remote-type>
            <local-name>[crop]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>crop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timepointyears</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timepointyears]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>timepointyears</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_per_clean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[loss_per_clean]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>loss_per_clean</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_loss_of_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_loss_of_quantity]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>percentage_loss_of_quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_quantity]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>loss_quantity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_qualitiative</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_qualitiative]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>loss_qualitiative</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_monetary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_monetary]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>loss_monetary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fsc_location1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fsc_location1]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>fsc_location1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>periodofstorage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[periodofstorage]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>periodofstorage</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>treatment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[treatment]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>treatment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>causeofloss</remote-name>
            <remote-type>130</remote-type>
            <local-name>[causeofloss]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>causeofloss</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>samplesize</remote-name>
            <remote-type>130</remote-type>
            <local-name>[samplesize]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>samplesize</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>units</remote-name>
            <remote-type>5</remote-type>
            <local-name>[units]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>units</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method_datacollection</remote-name>
            <remote-type>130</remote-type>
            <local-name>[method_datacollection]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>method_datacollection</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tag_datacollection</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tag_datacollection]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>tag_datacollection</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reference</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reference]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>reference</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V9917:no:A1:V9917:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>49740</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fruits and Vegtables' datatype='string' name='[Crop (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[crop]' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Data (1).csv_4B7DB4FBA3F947B0854D5B201965F667]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Causeofloss' datatype='string' name='[causeofloss]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Crop' datatype='string' name='[crop]' role='dimension' type='nominal' />
      <column caption='Fsc Location1' datatype='string' name='[fsc_location1]' role='dimension' type='nominal' />
      <column caption='Geographicaream49' datatype='integer' name='[geographicaream49]' role='measure' type='quantitative' />
      <column caption='Loss Monetary' datatype='string' name='[loss_monetary]' role='dimension' type='nominal' />
      <column caption='Loss Per Clean' datatype='real' name='[loss_per_clean]' role='measure' type='quantitative' />
      <column caption='Loss Qualitiative' datatype='string' default-role='measure' default-type='ordinal' name='[loss_qualitiative]' role='dimension' type='nominal' />
      <column caption='Loss Quantity' datatype='string' name='[loss_quantity]' role='dimension' type='nominal' />
      <column caption='Measureditemcpc' datatype='real' name='[measureditemcpc]' role='measure' type='quantitative' />
      <column caption='Method Datacollection' datatype='string' name='[method_datacollection]' role='dimension' type='nominal' />
      <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
      <column caption='Periodofstorage' datatype='string' name='[periodofstorage]' role='dimension' type='nominal' />
      <column caption='Reference' datatype='string' name='[reference]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Samplesize' datatype='string' name='[samplesize]' role='dimension' type='nominal' />
      <column caption='Tag Datacollection' datatype='string' name='[tag_datacollection]' role='dimension' type='nominal' />
      <column caption='Timepointyears' datatype='integer' name='[timepointyears]' role='measure' type='quantitative' />
      <column caption='Treatment' datatype='real' name='[treatment]' role='measure' type='quantitative' />
      <column caption='Units' datatype='real' name='[units]' role='measure' type='quantitative' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.958409' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0415913' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data (1).csv' id='Data (1).csv_4B7DB4FBA3F947B0854D5B201965F667'>
            <properties context=''>
              <relation connection='textscan.1fzadnp0muha2w12kva5u0dabh07' name='Data (1).csv' table='[Data (1)#csv$]' type='table'>
                <columns gridOrigin='A1:V9917:no:A1:V9917:1'>
                  <column datatype='integer' name='geographicaream49' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='region' ordinal='2' />
                  <column datatype='real' name='measureditemcpc' ordinal='3' />
                  <column datatype='string' name='crop' ordinal='4' />
                  <column datatype='integer' name='timepointyears' ordinal='5' />
                  <column datatype='real' name='loss_per_clean' ordinal='6' />
                  <column datatype='real' name='percentage_loss_of_quantity' ordinal='7' />
                  <column datatype='string' name='loss_quantity' ordinal='8' />
                  <column datatype='string' name='loss_qualitiative' ordinal='9' />
                  <column datatype='string' name='loss_monetary' ordinal='10' />
                  <column datatype='string' name='activity' ordinal='11' />
                  <column datatype='string' name='fsc_location1' ordinal='12' />
                  <column datatype='string' name='periodofstorage' ordinal='13' />
                  <column datatype='real' name='treatment' ordinal='14' />
                  <column datatype='string' name='causeofloss' ordinal='15' />
                  <column datatype='string' name='samplesize' ordinal='16' />
                  <column datatype='real' name='units' ordinal='17' />
                  <column datatype='string' name='method_datacollection' ordinal='18' />
                  <column datatype='string' name='tag_datacollection' ordinal='19' />
                  <column datatype='string' name='reference' ordinal='20' />
                  <column datatype='string' name='url' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bottom 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Countries with the Least Food Percentage Loss
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[percentage_loss_of_quantity]' derivation='Median' name='[med:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A09651B5-8850-4303-B9FE-1ED96C237D86}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Average Percentage Loss By Country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[percentage_loss_of_quantity]' derivation='Median' name='[med:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[Longitude (generated)]' field-type='quantitative' max='43891980.614748687' min='-10267182.556427427' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[Latitude (generated)]' field-type='quantitative' max='18385610.512238387' min='-12562484.11192126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]' />
              <text column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' />
              <lod column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]' />
              <color column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' />
              <geometry column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]>
]]></run>
                <run fontname='Tableau Light' fontsize='8'><![CDATA[<[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[Latitude (generated)]</rows>
        <cols>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3F14EC24-C453-41F3-BE0F-70388F92701A}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Percentage Loss based on Activity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7342EBF2-942E-4850-9837-5B9487D77B42}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Percentage Loss based on Supply Chain Phase
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column-instance column='[percentage_loss_of_quantity]' derivation='Avg' name='[avg:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column caption='Fsc Location1' datatype='string' name='[fsc_location1]' role='dimension' type='nominal' />
            <column-instance column='[fsc_location1]' derivation='None' name='[none:fsc_location1:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:fsc_location1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:fsc_location1:nk]' member='%null%' />
                <groupfilter function='member' level='[none:fsc_location1:nk]' member='&quot;-&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]</rows>
        <cols>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]</cols>
      </table>
      <simple-id uuid='{81D7EF63-2901-423E-A95D-1696FBF91C6D}' />
    </worksheet>
    <worksheet name='Sheet 2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Percentage Loss based on Supply Chain (Sorted by Country)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column-instance column='[percentage_loss_of_quantity]' derivation='Avg' name='[avg:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Fsc Location1' datatype='string' name='[fsc_location1]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[fsc_location1]' derivation='None' name='[none:fsc_location1:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:fsc_location1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:fsc_location1:nk]' member='%null%' />
                <groupfilter function='member' level='[none:fsc_location1:nk]' member='&quot;-&quot;' />
                <groupfilter function='member' level='[none:fsc_location1:nk]' member='&quot;SWS_Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk] / [federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:fsc_location1:nk])</rows>
        <cols>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]</cols>
      </table>
      <simple-id uuid='{23580A56-4DFC-4775-A732-ED041DF6049A}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column-instance column='[percentage_loss_of_quantity]' derivation='Avg' name='[avg:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column caption='Causeofloss' datatype='string' name='[causeofloss]' role='dimension' type='nominal' />
            <column-instance column='[causeofloss]' derivation='None' name='[none:causeofloss:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]' />
              <text column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:causeofloss:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{F8636E08-74D2-451E-918B-9B86BB7226E6}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column-instance column='[percentage_loss_of_quantity]' derivation='Avg' name='[avg:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column caption='Crop' datatype='string' name='[crop]' role='dimension' type='nominal' />
            <column-instance column='[crop]' derivation='None' name='[none:crop:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:crop:nk]' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:crop:nk]</rows>
        <cols>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]</cols>
      </table>
      <simple-id uuid='{64209528-1FC5-4F65-9CA6-970F2F1D1C3B}' />
    </worksheet>
    <worksheet name='Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Countries with the Most Food Percentage Loss
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (1)' name='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9' />
          </datasources>
          <datasource-dependencies datasource='federated.1okf1yg1qe2gqd1gl74hg1b2z1i9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[percentage_loss_of_quantity]' derivation='Median' name='[med:percentage_loss_of_quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='Median' datatype='real' name='[percentage_loss_of_quantity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Viet Nam&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4AA9B6F6-0F3E-4A88-8426-90DBD9CDA90D}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4ACAD32-0F1A-44DA-99B0-CA2FEE7DC7BE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FE88C7A2-B998-434A-886F-FEBD98061B82}' />
    </window>
    <window class='worksheet' name='Sheet 2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0AEB26FD-A06E-4968-BFA1-7BEACFAE59B4}' />
    </window>
    <window class='worksheet' name='Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7222AB72-DA61-41B5-8E07-956873B3FAA9}' />
    </window>
    <window class='worksheet' maximized='true' name='Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57F4C761-1C50-47FE-9BC5-73761621F4D5}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[med:percentage_loss_of_quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50FD4557-3339-4429-A1FB-64FB893FC59E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okf1yg1qe2gqd1gl74hg1b2z1i9].[avg:percentage_loss_of_quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{358BDE4D-9B8A-420C-A132-1C5DBF226D4E}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{099DDF0B-B083-4C5E-91CD-84389271C8E9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bottom 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='192'>
      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
      GRP/C/yLUhloKRvQAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
